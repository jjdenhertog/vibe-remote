# Supervisord configuration for vibe-kanban-taskpicker
# This service runs the taskpicker at regular intervals to automatically
# select and execute tasks from Vibe Kanban using Claude AI

[program:vibe-taskpicker]
# Command to execute - runs the compiled JavaScript
command=node %(ENV_PROJECT_ROOT)s/packages/vibe-kanban-taskpicker/dist/index.js

# Working directory
directory=%(ENV_PROJECT_ROOT)s

# Process management
autostart=true                  ; Start automatically when supervisord starts
autorestart=true                ; Restart if the process exits
startretries=5                  ; Number of restart attempts before giving up
startsecs=1                     ; Process must stay up for 1 second to be considered started
exitcodes=0                     ; Expected exit codes (0 = success)
stopsignal=TERM                 ; Signal to use when stopping the process
stopwaitsecs=30                 ; Wait up to 30 seconds for process to stop gracefully

# Logging configuration
stderr_logfile=/var/log/supervisor/vibe-taskpicker.err.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=5
stderr_capture_maxbytes=1MB
stdout_logfile=/var/log/supervisor/vibe-taskpicker.out.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=5
stdout_capture_maxbytes=1MB

# Environment variables
environment=
    NODE_ENV="production",
    PROJECT_ROOT="%(ENV_PROJECT_ROOT)s",
    CLAUDE_COMMAND="claude",
    VIBE_API_URL="http://localhost:3001",
    TASK_CHECK_INTERVAL="300",
    LOG_LEVEL="info",
    ANTHROPIC_API_KEY="%(ENV_ANTHROPIC_API_KEY)s",
    CLAUDE_API_KEY="%(ENV_CLAUDE_API_KEY)s",
    VIBE_PROJECT_ID="%(ENV_VIBE_PROJECT_ID)s"

# User and priority
user=root                       ; Run as root (needed for Docker environment)
priority=999                    ; Lower priority number = starts first

# Process naming
process_name=%(program_name)s
numprocs=1

# Redirect stderr to stdout for easier log management
redirect_stderr=false

# Kill process group when stopping
killasgroup=true
stopasgroup=true