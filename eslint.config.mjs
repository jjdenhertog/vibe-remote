/**
 * IMPORTANT FOR AI CODE GENERATORS:
 * 
 * This project enforces STRICT React patterns (when React is used):
 * 1. ALL event handlers MUST use useCallback - no inline functions allowed
 * 2. Conditional rendering MUST use !! or explicit boolean checks to prevent leaks
 * 3. Props MUST be destructured
 * 4. Components SHOULD be memoized when receiving props
 * 
 * Example patterns:
 * ✅ const handleClick = useCallback(() => {}, [])
 * ✅ {!!value && <Component />}
 * ❌ onClick={() => {}}
 * ❌ {value && <Component />}
 */

import typescriptPlugin from '@typescript-eslint/eslint-plugin';
import typescriptParser from '@typescript-eslint/parser';
import reactPlugin from 'eslint-plugin-react';
import reactHooksPlugin from 'eslint-plugin-react-hooks';
import unicorn from "eslint-plugin-unicorn";

const config = [
    {
        files: ["**/*.{ts,tsx}"],
        ignores: [
            'node_modules/**',
            'dist/**',
            'build/**',
            '.next/**',
            'out/**',
            '*.config.{js,mjs,cjs,ts}',
            '*.min.js',
            'coverage/**',
            '.turbo/**',
            'packages/*/dist/**',
            'apps/*/dist/**',
            'apps/*/.next/**',
            'apps/*/next-env.d.ts',
            '.claude/**',
            'memory/**',
            'coordination/**',
            'claude-flow',
            'claude-flow.*',
            '**/*.{js,jsx}',
            '**/*.js.map',
            '**/*.jsx.map'
        ],
        languageOptions: {
            parser: typescriptParser,
            ecmaVersion: 2021,
            sourceType: 'module',
            parserOptions: {
                ecmaFeatures: {
                    jsx: true
                },
                projectService: true
            },
            globals: {
                console: 'readonly',
                process: 'readonly',
                Buffer: 'readonly',
                __dirname: 'readonly',
                __filename: 'readonly',
                exports: 'writable',
                module: 'writable',
                require: 'readonly',
                global: 'readonly',
                window: 'readonly',
                document: 'readonly',
                localStorage: 'readonly',
                sessionStorage: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly',
                Promise: 'readonly',
                fetch: 'readonly',
                URL: 'readonly',
                URLSearchParams: 'readonly',
                FormData: 'readonly',
                Headers: 'readonly',
                Request: 'readonly',
                Response: 'readonly',
                React: 'readonly'
            }
        },
        plugins: {
            react: reactPlugin,
            'react-hooks': reactHooksPlugin,
            '@typescript-eslint': typescriptPlugin,
            unicorn
        },
        settings: {
            react: {
                version: 'detect'
            }
        },
        rules: {
            // Custom rules - uncomment when adding custom plugins
            // 'custom/one-line-if': 'error',
            // 'custom/simple-ternary-max-length': ['error', { maxLineLength: 150 }],
            // 'custom/jsx-single-line-props': ['error', { maxPropsForSingleLine: 6 }],
            // 'custom/jsx-multiline-children': ['error', { minTextLength: 20 }],
            // 'custom/forwardref-props-destructuring': 'error',
            // 'custom/no-export-only-files': 'error',
            indent: ['error', 4, { 
                SwitchCase: 1,
                ignoredNodes: [
                    'JSXElement',
                    'JSXElement > *',
                    'JSXAttribute',
                    'JSXIdentifier',
                    'JSXNamespacedName',
                    'JSXMemberExpression',
                    'JSXSpreadAttribute',
                    'JSXExpressionContainer',
                    'JSXOpeningElement',
                    'JSXClosingElement',
                    'JSXFragment',
                    'JSXOpeningFragment',
                    'JSXClosingFragment',
                    'JSXText',
                    'JSXEmptyExpression',
                    'JSXSpreadChild',
                    'TSTypeParameterInstantiation',
                    'FunctionExpression > .params[decorators.length > 0]',
                    'FunctionExpression > .params > :matches(Decorator, :not(:first-child))',
                    'ClassBody.body > PropertyDefinition[decorators.length > 0] > .key'
                ]
            }],
            "react/jsx-indent": ["error", 4],
            "react/jsx-indent-props": ["error", 4],
            "comma-dangle": [
                "error",
                {
                    arrays: "never",
                    objects: "only-multiline",
                    imports: "never",
                    exports: "never",
                    functions: "never"
                }
            ],
            // React rules
            'react-hooks/rules-of-hooks': 'error',
            'react-hooks/exhaustive-deps': 'error',
            "react/jsx-pascal-case": [
                "error",
                {
                    allowAllCaps: true,
                    allowLeadingUnderscore: true,
                    allowNamespace: true,
                    ignore: ["DV360_*"]
                }
            ],
            "react/jsx-max-depth": ["error", { max: 10 }],
            "newline-per-chained-call": ["error", { ignoreChainWithDepth: 2 }],
            "padding-line-between-statements": [
                "error",
                { blankLine: "always", prev: "*", next: "return" },
                { blankLine: "always", prev: "if", next: "*" },
                { blankLine: "always", prev: "*", next: "for" }
            ],
            "react/boolean-prop-naming": "error",
            "react/button-has-type": "error",
            "react/checked-requires-onchange-or-readonly": "error",
            "react/default-props-match-prop-types": "error",
            "react/destructuring-assignment": "error",
            "react/display-name": "error",
            "react/hook-use-state": "error",
            "react/iframe-missing-sandbox": "error",
            "react/jsx-boolean-value": "error",
            "react/jsx-curly-brace-presence": "error",
            "react/jsx-filename-extension": [
                "error",
                { extensions: [".jsx", ".tsx"] }
            ],
            "react/jsx-fragments": "error",
            "react/jsx-handler-names": "error",
            "react/jsx-key": "error",
            "react/jsx-no-bind": ["error", {
                "ignoreDOMComponents": false,
                "ignoreRefs": false,
                "allowArrowFunctions": false,
                "allowFunctions": false,
                "allowBind": false
            }],
            "react/jsx-no-comment-textnodes": "error",
            "react/jsx-no-constructed-context-values": "error",
            "react/jsx-no-duplicate-props": "error",
            "react/jsx-no-leaked-render": ["error", { 
                "validStrategies": ["ternary", "coerce"]
            }],
            "react/jsx-no-script-url": "error",
            "react/jsx-no-target-blank": "error",
            "react/jsx-no-undef": "error",
            "react/jsx-no-useless-fragment": ["warn", { allowExpressions: true }],
            "react/jsx-props-no-spread-multi": "error",
            "react/jsx-uses-react": "error",
            "react/jsx-uses-vars": "error",
            "react/no-access-state-in-setstate": "error",
            "react/no-adjacent-inline-elements": "off",
            "react/no-array-index-key": "off",
            "react/no-arrow-function-lifecycle": "error",
            "react/no-children-prop": "error",
            "react/no-danger-with-children": "error",
            "react/no-deprecated": "error",
            "react/no-did-mount-set-state": "error",
            "react/no-did-update-set-state": "error",
            "react/no-direct-mutation-state": "error",
            "react/no-find-dom-node": "error",
            "react/no-invalid-html-attribute": "error",
            "react/no-is-mounted": "error",
            "react/no-multi-comp": "error",
            "react/no-namespace": "error",
            "react/no-object-type-as-default-prop": "error",
            "react/no-redundant-should-component-update": "error",
            "react/no-render-return-value": "error",
            "react/no-set-state": "error",
            "react/no-string-refs": "error",
            "react/no-this-in-sfc": "error",
            "react/no-typos": "error",
            "react/no-unescaped-entities": "error",
            "react/no-unknown-property": ["error", { ignore: ["class"] }],
            "react/no-unsafe": "error",
            "react/no-unstable-nested-components": "error",
            "react/no-unused-class-component-methods": "error",
            "react/no-unused-state": "error",
            "react/no-will-update-set-state": "error",
            "react/prefer-es6-class": "error",
            "react/prefer-exact-props": "error",
            "react/prefer-read-only-props": "error",
            "react/prefer-stateless-function": "error",
            "react/prop-types": "error",
            "react/require-optimization": "error",
            "react/require-render-return": "error",
            "react/self-closing-comp": "error",
            "react/sort-comp": "error",
            "react/sort-default-props": "error",
            "react/sort-prop-types": "error",
            "react/state-in-constructor": "error",
            "react/static-property-placement": "error",
            "react/style-prop-object": "error",
            "react/void-dom-elements-no-children": "error",
            "accessor-pairs": "error",
            "array-callback-return": "error",
            "block-scoped-var": "error",
            "constructor-super": "error",
            "for-direction": "error",
            "func-name-matching": "error",
            "func-style": [
                "error",
                "declaration",
                {
                    allowArrowFunctions: true
                }
            ],
            "getter-return": "error",
            "grouped-accessor-pairs": "error",
            "guard-for-in": "off",
            "logical-assignment-operators": "error",
            "max-classes-per-file": "error",
            "max-depth": "error",
            "max-lines": ["error", { max: 500 }],
            "max-nested-callbacks": "error",
            "no-alert": "error",
            "no-async-promise-executor": "error",
            "no-await-in-loop": "off",
            "no-bitwise": "error",
            "no-caller": "error",
            "no-case-declarations": "off",
            "no-class-assign": "error",
            "no-compare-neg-zero": "error",
            "no-cond-assign": "error",
            "no-console": "off", // Allow console in CLI tools
            "no-const-assign": "error",
            "no-constant-binary-expression": "error",
            "no-constant-condition": "error",
            "no-constructor-return": "error",
            "no-debugger": "error",
            "no-delete-var": "error",
            "no-div-regex": "error",
            "no-dupe-args": "error",
            "no-dupe-else-if": "error",
            "no-dupe-keys": "error",
            "no-duplicate-case": "error",
            "no-else-return": "error",
            "no-empty": ["error", { "allowEmptyCatch": true }],
            "no-empty-character-class": "error",
            "no-empty-pattern": "error",
            "no-empty-static-block": "error",
            "no-eq-null": "off",
            "no-eval": "error",
            "no-ex-assign": "error",
            "no-extend-native": "error",
            "no-extra-bind": "error",
            "no-extra-boolean-cast": "error",
            "no-extra-label": "error",
            "no-fallthrough": "error",
            "no-func-assign": "error",
            "no-global-assign": "error",
            "no-import-assign": "error",
            "no-inner-declarations": "error",
            "no-invalid-regexp": "error",
            "no-irregular-whitespace": "error",
            "no-iterator": "error",
            "no-label-var": "error",
            "no-labels": "error",
            "no-lone-blocks": "error",
            "no-lonely-if": "off",
            "no-misleading-character-class": "error",
            "no-multi-assign": ["error", { ignoreNonDeclaration: true }],
            "no-multi-str": "error",
            "no-negated-condition": "error",
            "no-nested-ternary": "off",
            "no-new": "error",
            "no-new-func": "error",
            "no-new-native-nonconstructor": "error",
            "no-new-wrappers": "error",
            "no-nonoctal-decimal-escape": "error",
            "no-obj-calls": "error",
            "no-object-constructor": "error",
            "no-octal": "error",
            "no-octal-escape": "error",
            "no-process-exit": "off",
            "no-promise-executor-return": "error",
            "no-proto": "error",
            "no-prototype-builtins": "error",
            "no-redeclare": "off",
            "no-regex-spaces": "error",
            "no-restricted-exports": "off",
            "no-restricted-globals": "off",
            "no-restricted-imports": "off",
            "no-restricted-modules": "off",
            "no-restricted-properties": "off",
            "no-restricted-syntax": "off",
            "no-return-assign": "error",
            "no-return-await": "off",
            "no-script-url": "error",
            "no-self-assign": "error",
            "no-self-compare": "error",
            "no-sequences": "error",
            "no-setter-return": "error",
            "no-shadow": "off",
            "no-shadow-restricted-names": "error",
            "no-sparse-arrays": "error",
            "no-sync": "off",
            "no-template-curly-in-string": "off",
            "no-ternary": "off",
            "no-this-before-super": "error",
            "no-throw-literal": "off",
            "no-undef": "off",
            "no-undef-init": "error",
            "no-undefined": "off",
            "no-underscore-dangle": "off",
            "no-unmodified-loop-condition": "error",
            "no-unneeded-ternary": "error",
            "no-unreachable": "error",
            "no-unreachable-loop": "error",
            "no-unsafe-finally": "error",
            "no-unsafe-negation": "error",
            "no-unsafe-optional-chaining": "error",
            "no-unused-expressions": "off",
            "no-unused-labels": "error",
            "no-unused-private-class-members": "error",
            "no-unused-vars": "off",
            "no-use-before-define": "off",
            "no-useless-assignment": "off",
            "no-useless-backreference": "error",
            "no-useless-call": "error",
            "no-useless-catch": "error",
            "no-useless-computed-key": "error",
            "no-useless-concat": "error",
            "no-useless-constructor": "off",
            "no-useless-escape": "error",
            "no-useless-rename": "error",
            "no-useless-return": "error",
            "no-var": "error",
            "no-void": "error",
            "no-warning-comments": "off",
            "no-with": "error",
            "object-shorthand": "error",
            "one-var": "off",
            "operator-assignment": "error",
            "prefer-arrow-callback": "error",
            "prefer-const": "error",
            "prefer-destructuring": "off",
            "prefer-exponentiation-operator": "error",
            "prefer-numeric-literals": "error",
            "prefer-object-has-own": "error",
            "prefer-object-spread": "error",
            "prefer-promise-reject-errors": "off",
            "prefer-reflect": "off",
            "prefer-regex-literals": "error",
            "prefer-rest-params": "error",
            "prefer-spread": "error",
            "prefer-template": "error",
            radix: "error",
            "require-atomic-updates": "error",
            "require-await": "off",
            "require-yield": "error",
            "spaced-comment": "off",
            "sort-imports": "off",
            "sort-keys": "off",
            "sort-vars": "error",
            strict: "error",
            "symbol-description": "error",
            "unicode-bom": "error",
            "use-isnan": "error",
            "valid-typeof": "error",
            "vars-on-top": "error",
            "@typescript-eslint/adjacent-overload-signatures": "off",
            "@typescript-eslint/array-type": "error",
            "@typescript-eslint/await-thenable": "error",
            "@typescript-eslint/ban-ts-comment": "off",
            "@typescript-eslint/ban-tslint-comment": "error",
            "@typescript-eslint/class-literal-property-style": "error",
            "@typescript-eslint/class-methods-use-this": "off",
            "@typescript-eslint/consistent-generic-constructors": "error",
            "@typescript-eslint/consistent-indexed-object-style": "error",
            "@typescript-eslint/consistent-return": "off",
            "@typescript-eslint/consistent-type-assertions": "error",
            "@typescript-eslint/consistent-type-definitions": ["error", "type"],
            "@typescript-eslint/default-param-last": "error",
            "@typescript-eslint/dot-notation": "error",
            "@typescript-eslint/explicit-function-return-type": "off",
            "@typescript-eslint/explicit-member-accessibility": "error",
            "@typescript-eslint/explicit-module-boundary-types": "off",
            "@typescript-eslint/init-declarations": "off",
            "@typescript-eslint/lines-between-class-members": "off",
            "@typescript-eslint/max-params": ["error", { max: 10 }],
            "@typescript-eslint/member-ordering": "off",
            "@typescript-eslint/method-signature-style": "error",
            "@typescript-eslint/naming-convention": "off",
            "@typescript-eslint/no-array-constructor": "error",
            "@typescript-eslint/no-array-delete": "error",
            "@typescript-eslint/no-base-to-string": "error",
            "@typescript-eslint/no-confusing-non-null-assertion": "error",
            "@typescript-eslint/no-dupe-class-members": "off",
            "@typescript-eslint/no-duplicate-enum-values": "error",
            "@typescript-eslint/no-duplicate-type-constituents": "error",
            "@typescript-eslint/no-dynamic-delete": "error",
            "@typescript-eslint/no-empty-function": "error",
            "@typescript-eslint/no-empty-interface": "error",
            "@typescript-eslint/no-empty-object-type": "error",
            "@typescript-eslint/no-explicit-any": "off",
            "@typescript-eslint/no-extra-non-null-assertion": "error",
            "@typescript-eslint/no-extraneous-class": "warn",
            "@typescript-eslint/no-for-in-array": "error",
            "@typescript-eslint/no-implied-eval": "error",
            "@typescript-eslint/no-import-type-side-effects": "error",
            "@typescript-eslint/no-invalid-this": "off",
            "@typescript-eslint/no-invalid-void-type": "error",
            "@typescript-eslint/no-loop-func": "error",
            "@typescript-eslint/no-loss-of-precision": "error",
            "@typescript-eslint/no-magic-numbers": "off",
            "@typescript-eslint/no-meaningless-void-operator": "error",
            "@typescript-eslint/no-misused-new": "error",
            "@typescript-eslint/no-misused-promises": "error",
            "@typescript-eslint/no-mixed-enums": "error",
            "@typescript-eslint/no-namespace": "error",
            "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "off",
            "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
            "@typescript-eslint/no-redeclare": "off",
            "@typescript-eslint/no-redundant-type-constituents": "error",
            "@typescript-eslint/no-require-imports": "error",
            "@typescript-eslint/no-restricted-imports": "error",
            "@typescript-eslint/no-shadow": "off",
            "@typescript-eslint/no-this-alias": "error",
            "@typescript-eslint/no-throw-literal": "off",
            "@typescript-eslint/no-type-alias": "off",
            "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
            "@typescript-eslint/no-unnecessary-parameter-property-assignment": "error",
            "@typescript-eslint/no-unnecessary-qualifier": "error",
            "@typescript-eslint/no-unnecessary-type-arguments": "error",
            "@typescript-eslint/no-unnecessary-type-assertion": "error",
            "@typescript-eslint/no-unnecessary-type-constraint": "error",
            "@typescript-eslint/no-unnecessary-type-parameters": "error",
            "@typescript-eslint/no-unused-expressions": "error",
            "@typescript-eslint/no-unused-vars": [
                "error",
                {
                    "args": "all",
                    "argsIgnorePattern": "^_",
                    "caughtErrors": "all",
                    "caughtErrorsIgnorePattern": "^_",
                    "destructuredArrayIgnorePattern": "^_",
                    "varsIgnorePattern": "^_",
                    "ignoreRestSiblings": true
                }
            ],
            "@typescript-eslint/no-use-before-define": "off",
            "@typescript-eslint/no-useless-constructor": "error",
            "@typescript-eslint/no-useless-empty-export": "error",
            "@typescript-eslint/no-useless-template-literals": "off",
            "@typescript-eslint/no-unnecessary-template-expression": "error",
            "@typescript-eslint/no-var-requires": "error",
            "@typescript-eslint/no-wrapper-object-types": "error",
            "@typescript-eslint/non-nullable-type-assertion-style": "error",
            "@typescript-eslint/only-throw-error": "error",
            "@typescript-eslint/parameter-properties": "off",
            "@typescript-eslint/prefer-as-const": "error",
            "@typescript-eslint/prefer-destructuring": "error",
            "@typescript-eslint/prefer-enum-initializers": "error",
            "@typescript-eslint/prefer-function-type": "error",
            "@typescript-eslint/prefer-literal-enum-member": "error",
            "@typescript-eslint/prefer-namespace-keyword": "error",
            "@typescript-eslint/prefer-nullish-coalescing": ["off"],
            "@typescript-eslint/prefer-optional-chain": "error",
            "@typescript-eslint/prefer-readonly": "error",
            "@typescript-eslint/prefer-readonly-parameter-types": "off",
            "@typescript-eslint/prefer-reduce-type-parameter": "error",
            "@typescript-eslint/prefer-regexp-exec": "error",
            "@typescript-eslint/prefer-return-this-type": "error",
            "@typescript-eslint/prefer-string-starts-ends-with": "error",
            "@typescript-eslint/prefer-ts-expect-error": "off",
            "@typescript-eslint/require-array-sort-compare": "error",
            "@typescript-eslint/require-await": "off",
            "@typescript-eslint/restrict-plus-operands": "error",
            "@typescript-eslint/restrict-template-expressions": "error",
            "@typescript-eslint/return-await": "error",
            "@typescript-eslint/sort-type-constituents": "off",
            "@typescript-eslint/switch-exhaustiveness-check": "off",
            "@typescript-eslint/triple-slash-reference": "error",
            "@typescript-eslint/typedef": "off",
            "@typescript-eslint/unified-signatures": "error",
            "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
            "unicorn/better-regex": "error",
            "unicorn/consistent-destructuring": "error",
            "unicorn/consistent-empty-array-spread": "error",
            "unicorn/custom-error-definition": "error",
            "unicorn/error-message": "error",
            "unicorn/escape-case": "error",
            "unicorn/explicit-length-check": "off",
            "unicorn/expiring-todo-comments": "error",
            "unicorn/import-index": "off",
            "unicorn/import-style": "off",
            "unicorn/new-for-builtins": "error",
            "unicorn/no-abusive-eslint-disable": "error",
            "unicorn/no-anonymous-default-export": "error",
            "unicorn/no-array-instanceof": "off",
            "unicorn/no-array-method-this-argument": "error",
            "unicorn/no-array-push-push": "error",
            "unicorn/no-await-expression-member": "error",
            "unicorn/no-await-in-promise-methods": "error",
            "unicorn/no-console-spaces": "error",
            "unicorn/no-document-cookie": "error",
            "unicorn/no-empty-file": "error",
            "unicorn/no-fn-reference-in-iterator": "off",
            "unicorn/no-instanceof-array": "error",
            "unicorn/no-invalid-fetch-options": "error",
            "unicorn/no-invalid-remove-event-listener": "error",
            "unicorn/no-keyword-prefix": "off",
            "unicorn/no-lonely-if": "off",
            "unicorn/no-magic-array-flat-depth": "error",
            "unicorn/no-negated-condition": "error",
            "unicorn/no-negation-in-equality-check": "error",
            "unicorn/no-new-array": "error",
            "unicorn/no-new-buffer": "error",
            "unicorn/prefer-dataset": "off",
            "unicorn/prefer-event-key": "off",
            "unicorn/prefer-exponentiation-operator": "off",
            "unicorn/prefer-flat-map": "off",
            "unicorn/prefer-node-append": "off",
            "unicorn/prefer-node-remove": "off",
            "unicorn/prefer-object-has-own": "off",
            "unicorn/prefer-replace-all": "off",
            "unicorn/prefer-starts-ends-with": "off",
            "unicorn/prefer-text-content": "off",
            "unicorn/prefer-trim-start-end": "off",
            "unicorn/regex-shorthand": "off",
            "unicorn/no-null": "off",
            "unicorn/no-object-as-default-parameter": "error",
            "unicorn/no-process-exit": "error",
            "unicorn/no-reduce": "off",
            "unicorn/no-single-promise-in-promise-methods": "error",
            "unicorn/no-static-only-class": "error",
            "unicorn/no-thenable": "error",
            "unicorn/no-this-assignment": "error",
            "unicorn/no-typeof-undefined": "error",
            "unicorn/no-unnecessary-await": "error",
            "unicorn/no-unnecessary-polyfills": "error",
            "unicorn/no-unreadable-array-destructuring": "error",
            "unicorn/no-unreadable-iife": "error",
            "unicorn/no-unsafe-regex": "off",
            "unicorn/no-unused-properties": "error",
            "unicorn/no-useless-fallback-in-spread": "error",
            "unicorn/no-useless-length-check": "error",
            "unicorn/no-useless-promise-resolve-reject": "error",
            "unicorn/no-useless-spread": "error",
            "unicorn/no-useless-switch-case": "error",
            "unicorn/no-useless-undefined": "error",
            "unicorn/no-zero-fractions": "error",
            "unicorn/numeric-separators-style": "error",
            "unicorn/prefer-array-flat": "error",
            "unicorn/prefer-array-flat-map": "error",
            "unicorn/prefer-array-index-of": "error",
            "unicorn/prefer-array-some": "error",
            "unicorn/prefer-at": "error",
            "unicorn/prefer-blob-reading-methods": "error",
            "unicorn/prefer-code-point": "error",
            "unicorn/prefer-date-now": "error",
            "unicorn/prefer-default-parameters": "error",
            "unicorn/prefer-dom-node-append": "error",
            "unicorn/prefer-dom-node-dataset": "off",
            "unicorn/prefer-dom-node-remove": "error",
            "unicorn/prefer-dom-node-text-content": "error",
            "unicorn/prefer-event-target": "error",
            "unicorn/prefer-export-from": "error",
            "unicorn/prefer-json-parse-buffer": "error",
            "unicorn/prefer-keyboard-event-key": "error",
            "unicorn/prefer-logical-operator-over-ternary": "off",
            "unicorn/prefer-math-trunc": "error",
            "unicorn/prefer-module": "error",
            "unicorn/prefer-native-coercion-functions": "error",
            "unicorn/prefer-negative-index": "error",
            "unicorn/prefer-node-protocol": "error",
            "unicorn/prefer-object-from-entries": "error",
            "unicorn/prefer-prototype-methods": "error",
            "unicorn/prefer-reflect-apply": "error",
            "unicorn/prefer-regexp-test": "error",
            "unicorn/prefer-set-has": "error",
            "unicorn/prefer-set-size": "error",
            "unicorn/prefer-string-raw": "error",
            "unicorn/prefer-string-replace-all": "off",
            "unicorn/prefer-string-slice": "error",
            "unicorn/prefer-string-starts-ends-with": "error",
            "unicorn/prefer-string-trim-start-end": "error",
            "unicorn/prefer-structured-clone": "error",
            "unicorn/prefer-switch": "error",
            "unicorn/prefer-ternary": "off",
            "unicorn/prefer-top-level-await": "error",
            "unicorn/prefer-type-error": "off",
            "unicorn/prevent-abbreviations": ["off",
                {
                    "allowList": {
                        "i": true,
                        "e": true,
                        cur: true,
                        el: true,
                        num: true,
                        Num: true,
                        btn: true,
                        Btn: true,
                        res: true,
                        req: true,
                        prev: true,
                        Prev: true,
                        props: true,
                        Props: true,
                        vars: true,
                        Vars: true,
                        dest: true,
                        ref: true,
                        refs: true,
                        Ref: true,
                        Refs: true,
                        params: true
                    }
                }
            ],
            "unicorn/relative-url-style": "error",
            "unicorn/require-array-join-separator": "error",
            "unicorn/require-number-to-fixed-digits-argument": "error",
            "unicorn/require-post-message-target-origin": "error",
            "unicorn/string-content": "error",
            "unicorn/text-encoding-identifier-case": "error",
            "unicorn/throw-new-error": "error",
            
            // JSX Props formatting: 6 or fewer props = single line, more = multi-line
            "react/jsx-max-props-per-line": ["error", { 
                "maximum": { "single": 6, "multi": 1 } 
            }],
            "react/jsx-first-prop-new-line": ["error", "multiline"]
        }
    }
]

export default config;